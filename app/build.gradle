plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

// In the case in question, it could be reduced to a single variable.
def BASE_URL_PROD = "\"https://api.github.com\""
def BASE_URL_QA = "\"https://api.github.com\""

def BASE_URL = BASE_URL_QA

// In real projects, there's a need for a logic like the one below.
if (getGradle().getStartParameter().getTaskRequests().toString().containsIgnoreCase("release")) {
    BASE_URL = BASE_URL_PROD
}

def GITHUB_TOKEN = "\"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\""

android {
    namespace 'com.example.carrefourbankchallenge'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.carrefourbankchallenge"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "BASE_URL", BASE_URL
            buildConfigField "String", "GITHUB_TOKEN", GITHUB_TOKEN
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", BASE_URL
            buildConfigField "String", "GITHUB_TOKEN", GITHUB_TOKEN
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/*'
        }
    }
}

dependencies {

    // Android
    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
    implementation "androidx.activity:activity-compose:$compose_activity_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_runtime_ktx_version"
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation "androidx.compose.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraint_layout_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Paging
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-compose:$paging_compose_version"

    // Koin
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Coil
    implementation "io.coil-kt:coil:$coil_version"
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_test_version"
    testImplementation "androidx.arch.core:core-testing:$arch_core_version"
    testImplementation "app.cash.turbine:turbine:$turbine_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    androidTestImplementation "androidx.test.ext:junit:$junit_ui_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
}